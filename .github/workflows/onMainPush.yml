on:
  push:
    branches:
      - main
jobs:
  publish:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: 315199611892.dkr.ecr.eu-west-2.amazonaws.com
          ECR_REPOSITORY: ecr-repo-name
          IMAGE_TAG: asdfghjklzxcvbnmqwertyuiop
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Log out of Amazon ECR
        if: always()
        run: docker logout 315199611892.dkr.ecr.eu-west-2.amazonaws.com

      - name: Clean up old Docker images
        run: docker system prune -a -f

      - name: Checkout
        uses: actions/checkout@master

      - name: Login
        if: success()
        uses: atlassian/gajira-login@master
        continue-on-error: true
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Find Issue Key
        if: success()
        uses: atlassian/gajira-find-issue-key@master
        continue-on-error: true
        id: findissuekey
        with:
          string: ${{ github.event.pull_request.title }}

      - name: Transition issue
        if: success()
        uses: atlassian/gajira-transition@master
        continue-on-error: true
        with:
          issue: ${{ steps.findissuekey.outputs.issue }}
          transition: "Done"      
