on:
  pull_request:
    branches:
      - main
jobs:
  test-unit:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - run: |
          export GOPATH=$HOME/go && \
          export GOBIN=$GOPATH/bin && \
          export PATH=$GOBIN:$PATH:/usr/local/go/bin && \
          make clean test-unit
#  test-fail:
#    runs-on: self-hosted
#    steps:
#      - name: test Fail
#        run: |
#          exit 1
  job10:
    runs-on: self-hosted
    needs: [test-unit]
    if: (needs.test-unit.result == 'success')
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: coincover-devops-alert
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://assets.coincover.com/images/logo-square.png
          SLACK_TITLE: 'Message :partyparrot: '
          SLACK_MESSAGE: 'successful @here ${{ steps.urlPR.outputs.url }}'
          SLACK_USERNAME: Github
          MSG_MINIMAL: event,actions url,ref
          SLACK_LINK_NAMES: true
          SLACK_WEBHOOK: ${{ secrets.SLACKWEBHOOK }}
          SLACK_MSG_AUTHOR: ${{ github.actor }}

  run-if-failed:
    runs-on: self-hosted
    needs: [test-unit]
    if: always() && (needs.test-unit.result == 'failure')
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: coincover-devops-alert
          SLACK_COLOR: '#CC0000'
          SLACK_ICON: https://assets.coincover.com/images/logo-square.png
          SLACK_TITLE: 'Message :fire::fire::fire:'
          SLACK_MESSAGE: 'something failed @here'
          SLACK_USERNAME: Github
          MSG_MINIMAL: event,actions url,ref
          SLACK_LINK_NAMES: true
          SLACK_WEBHOOK: ${{ secrets.SLACKWEBHOOK }}
          SLACK_MSG_AUTHOR: ${{ github.actor }}
